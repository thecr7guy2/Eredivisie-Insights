version: "3.9"

volumes:
    postgres_data: {}
    prefect_data: {}
    superset_data: {}


services:
  database:
    image: postgres:15.5-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./superset/docker-entrypoint-initdb.d/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=prefect
    ports:
      - 5432:5432
    profiles: ["server"]


  server:
    image: prefecthq/prefect:2.14.15-python3.10
    # restart: always
    volumes:
      - prefect_data:/root/.prefect
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    env_file:
      - ./docker_envs/prefect.env
      - ./docker_envs/aws.env
    depends_on:
      - database
    ports:
      - 4200:4200
    profiles: ["server"]


  agent:
    image: prefecthq/prefect:2.11.5-python3.11
    # restart: always
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "agent", "start", "-q", "YOUR_WORK_QUEUE_NAME"]
    environment:
      - PREFECT_API_URL=http://server:4200/api
    profiles: ["agent"]

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - database
    profiles: ["server"]

  
  superset:
      build:
        context: ./superset
        dockerfile: Dockerfile
      container_name: superset
      environment:
        - ADMIN_USERNAME=admin
        - ADMIN_EMAIL=admin@superset.com
        - ADMIN_PASSWORD=admin
      env_file:
        - ./docker_envs/aws.env
      ports:
        - '8088:8088'
      volumes:
        - superset_data:/app/superset_home
      profiles: ["dash"]

    


  
 